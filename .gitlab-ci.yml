# Image used for running the pipeline
image: maven:3.8.4-openjdk-17-slim

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Manage Sonar cache
  SONAR_HOST_URL: "http://sonarcube.hva-fys.nl:28958" # Replace with your SonarQube URL
  SONAR_LOGIN: "sqp_41758736530fb03238d875e5150bb2eb363c67a3" # SonarQube token from GitLab CI/CD variables
  SONAR_PROJECT_KEY: "burger-service-nummer-validator" # SonarQube project key
  SONAR_PROJECT_NAME: "burger service nummer validator" # SonarQube project name
  SONAR_SOURCE_ENCODING: "UTF-8"
  SONAR_SCANNER_OPTS: "-Dsonar.java.binaries=target"
  DOCKER_USERNAME: "tracyo"
  DOCKER_PASSWORD: "tracy1234"
  DOCKER_REGISTRY_IMAGE: "tracyo/banapp"
  CI_COMMIT_SHORT_SHA: "v1.0"

stages:
  - build
  - test
  - sonar
  - docker-deploy
  - render-deploy

build:
  stage: build
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar
  tags:
    - hva

test:
  stage: test
  script:
    - mvn test
  tags:
    - hva

sonarqube-check:
  stage: sonar
  script:
    - mvn sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.host.url=$SONAR_HOST_URL -Dsonar.login=$SONAR_LOGIN
  allow_failure: true
  only:
    - main
  tags:
    - hva

docker-deploy:
  stage: docker-deploy
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  script:
    - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD"
    - docker build -t "$DOCKER_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker push "$DOCKER_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    - main
  tags:
    - hva
  environment:
    name: production

render-deploy:
  stage: render-deploy
  script:
    - curl -X POST https://api.render.com/deploy/srv-crma6i88fa8c73afkl00?key=D_lJtOQlsnA
  only:
    - main
  tags:
    - hva
